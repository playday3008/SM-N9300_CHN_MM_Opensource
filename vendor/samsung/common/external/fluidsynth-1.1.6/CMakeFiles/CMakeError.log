Determining if the system is big endian passed with the following output:
Change Dir: /root/APA/fluidsynth-1.1.6/CMakeFiles/CMakeTmp

Run Build Command:/usr/bin/make "cmTryCompileExec/fast"
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
make[1]: Entering directory `/root/APA/fluidsynth-1.1.6/CMakeFiles/CMakeTmp'
/usr/bin/cmake -E cmake_progress_report /root/APA/fluidsynth-1.1.6/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/TestEndianess.c.o
/opt/android-toolchain/bin/arm-linux-androideabi-gcc  -DANDROID -D__ARM_ARCH_5__ -D__ARM_ARCH_5T__ -D__ARM_ARCH_5E__ -D__ARM_ARCH_5TE__ --sysroot=/opt/android-toolchain/sysroot -fsigned-char -march=armv7-a -mfloat-abi=softfp -mfpu=vfp -fdata-sections -ffunction-sections -fPIC -Wno-psabi -fexceptions   -isystem /opt/android-toolchain/sysroot/usr/include -isystem /opt/android-toolchain/arm-linux-androideabi/include/c++/4.4.3/arm-linux-androideabi/armv7-a   -o CMakeFiles/cmTryCompileExec.dir/TestEndianess.c.o   -c /root/APA/fluidsynth-1.1.6/CMakeFiles/CMakeTmp/TestEndianess.c
Linking C executable cmTryCompileExec
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTryCompileExec.dir/link.txt --verbose=1
/opt/android-toolchain/bin/arm-linux-androideabi-gcc   --sysroot=/opt/android-toolchain/sysroot -fsigned-char -march=armv7-a -mfloat-abi=softfp -mfpu=vfp -fdata-sections -ffunction-sections -fPIC -Wno-psabi -fexceptions    -Wl,--fix-cortex-a8 -Wl,--gc-sections -Wl,--no-undefined  -Wl,-z,nocopyreloc CMakeFiles/cmTryCompileExec.dir/TestEndianess.c.o  -o cmTryCompileExec -rdynamic -L/opt/android-toolchain/user/libs/armeabi-v7a -L/root/APA/fluidsynth-1.1.6/CMakeFiles/ndklibs/armeabi-v7a 
make[1]: Leaving directory `/root/APA/fluidsynth-1.1.6/CMakeFiles/CMakeTmp'

TestEndianess.c:
/* A 16 bit integer is required. */
typedef unsigned short cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}


