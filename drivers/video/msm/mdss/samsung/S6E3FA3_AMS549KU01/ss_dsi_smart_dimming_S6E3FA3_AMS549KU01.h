/*
 * =================================================================
 *
 *
 *	Description:  samsung display panel file
 *
 *	Author: jb09.kim
 *	Company:  Samsung Electronics
 *
 * ================================================================
 */
/*
<one line to give the program's name and a brief idea of what it does.>
Copyright (C) 2012, Samsung Electronics. All rights reserved.

*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 and
 * only version 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 *
*/
#ifndef _SAMSUNG_DSI_SMART_DIMMING_S6E3FA3_AMS549KU01_H_
#define _SAMSUNG_DSI_SMART_DIMMING_S6E3FA3_AMS549KU01_H_

#include "../ss_dsi_panel_common.h"
#include "../ss_dsi_smart_dimming_common.h"

/*
*	From 4.8 inch model use AID function
*	CASE#1 is used for now.
*/
#define AID_OPERATION

enum {
	GAMMA_CURVE_1P9 = 0,
	GAMMA_CURVE_2P15,
	GAMMA_CURVE_2P2,
};

#define LUMINANCE_MAX 62
#define MAX_TABLE_HMT 37
#define GAMMA_SET_MAX 33 // NEW
#define BIT_SHIFT 22
/*
	it means BIT_SHIFT is 22.  pow(2,BIT_SHIFT) is 4194304.
	BIT_SHIFT is used for right bit shfit
*/
#define BIT_SHFIT_MUL 4194304

#define GRAY_SCALE_MAX 256

/*6.2 * 4194304 */
#define VREG0_REF_6P2 26004685

/*6.5 * 4194304 */
#define VREG0_REF_6P5 27262976

/*V0,V3,V11,V23,V35,V51,V87,V151,V203,V255*/
#define ARRAY_MAX 11

/* PANEL DEPENDENT THINGS */
#define MIN_CANDELA	5

/*
*	ID 0x20
*/
#define V255_300CD_R_MSB_20 0x01
#define V255_300CD_R_LSB_20 0x00

#define V255_300CD_G_MSB_20 0x01
#define V255_300CD_G_LSB_20 0x00

#define V255_300CD_B_MSB_20 0x01
#define V255_300CD_B_LSB_20 0x00

#define V203_300CD_R_20 0x80
#define V203_300CD_G_20 0x80
#define V203_300CD_B_20 0x80

#define V151_300CD_R_20 0x80
#define V151_300CD_G_20 0x80
#define V151_300CD_B_20 0x80

#define V87_300CD_R_20 0x80
#define V87_300CD_G_20 0x80
#define V87_300CD_B_20 0x80

#define V51_300CD_R_20 0x80
#define V51_300CD_G_20 0x80
#define V51_300CD_B_20 0x80

#define V35_300CD_R_20 0x80
#define V35_300CD_G_20 0x80
#define V35_300CD_B_20 0x80

#define V23_300CD_R_20 0x80
#define V23_300CD_G_20 0x80
#define V23_300CD_B_20 0x80

#define V11_300CD_R_20 0x80
#define V11_300CD_G_20 0x80
#define V11_300CD_B_20 0x80

#define V3_300CD_R_20 0x80
#define V3_300CD_G_20 0x80
#define V3_300CD_B_20 0x80

#define VT_300CD_R_20 0x00
#define VT_300CD_G_20 0x00
#define VT_300CD_B_20 0x00

/* PANEL DEPENDENT THINGS END*/
enum {
	V1_INDEX = 0,
	V3_INDEX = 1,
	V11_INDEX = 2,
	V23_INDEX = 3,
	V35_INDEX = 4,
	V51_INDEX = 5,
	V87_INDEX = 6,
	V151_INDEX = 7,
	V203_INDEX = 8,
	V255_INDEX = 9,
};

struct GAMMA_LEVEL {
	int level_0;
	int level_1;
	int level_3;
	int level_11;
	int level_23;
	int level_35;
	int level_51;
	int level_87;
	int level_151;
	int level_203;
	int level_255;
} __packed;

struct RGB_OUTPUT_VOLTARE {
	struct GAMMA_LEVEL R_VOLTAGE;
	struct GAMMA_LEVEL G_VOLTAGE;
	struct GAMMA_LEVEL B_VOLTAGE;
} __packed;

struct GRAY_VOLTAGE {
	/*
		This voltage value use 14bit right shit
		it means voltage is divied by 16384.
	*/
	int R_Gray;
	int G_Gray;
	int B_Gray;
} __packed;

struct GRAY_SCALE {
	struct GRAY_VOLTAGE TABLE[GRAY_SCALE_MAX];
	struct GRAY_VOLTAGE VT_TABLE;
} __packed;

/*V0,V1,V3,V11,V23,V35,V51,V87,V151,V203,V255*/

struct MTP_SET {
	char OFFSET_255_MSB;
	char OFFSET_255_LSB;
	char OFFSET_203;
	char OFFSET_151;
	char OFFSET_87;
	char OFFSET_51;
	char OFFSET_35;
	char OFFSET_23;
	char OFFSET_11;
	char OFFSET_3;
	char OFFSET_1;
} __packed;

struct MTP_OFFSET {
	struct MTP_SET R_OFFSET;
	struct MTP_SET G_OFFSET;
	struct MTP_SET B_OFFSET;
} __packed;

struct illuminance_table {
	int lux;
	char gamma_setting[GAMMA_SET_MAX];
} __packed;

struct SMART_DIM {
	struct MTP_OFFSET MTP_ORIGN;
	struct MTP_OFFSET MTP;
	struct RGB_OUTPUT_VOLTARE RGB_OUTPUT;
	struct GRAY_SCALE GRAY;

	/* Because of AID funtion, below members are added*/
	int lux_table_max;
	int *plux_table;
	struct illuminance_table gen_table[LUMINANCE_MAX];
	struct illuminance_table hmt_gen_table[MAX_TABLE_HMT]; // For HMT

	int brightness_level;
	int ldi_revision;
	int vregout_voltage;

	/* HBM interpolation */
	struct illuminance_table hbm_interpolation_table[HBM_INTERPOLATION_STEP];
	char *hbm_payload;
	int hbm_brightness_level;
} __packed;

#define AOR_DIM_BASE_CD	114

#define CANDELA_MAX_TABLE 61
#define RGB_COMPENSATION 24

static int candela_table[][2] = {
	{5, 0},
	{6, 1},
	{7, 2},
	{8, 3},
	{9, 4},
	{10, 5},
	{11, 6},
	{12, 7},
	{13, 8},
	{14, 9},
	{15, 10},
	{16, 11},
	{17, 12},
	{19, 13},
	{20, 14},
	{21, 15},
	{22, 16},
	{24, 17},
	{25, 18},
	{27, 19},
	{29, 20},
	{30, 21},
	{32, 22},
	{34, 23},
	{37, 24},
	{39, 25},
	{41, 26},
	{44, 27},
	{47, 28},
	{50, 29},
	{53, 30},
	{56, 31},
	{60, 32},
	{64, 33},
	{68, 34},
	{72, 35},
	{77, 36},
	{82, 37},
	{87, 38},
	{93, 39},
	{98, 40},
	{105, 41},
	{111, 42},
	{119, 43},
	{126, 44},
	{134, 45},
	{143, 46},
	{152, 47},
	{162, 48},
	{172, 49},
	{183, 50},
	{195, 51},
	{207, 52},
	{220, 53},
	{234, 54},
	{249, 55},
	{265, 56},
	{282, 57},
	{300, 58},
	{316, 59},
	{333, 60},
	{360, 61},
};

static int base_luminance_revA[][2] = {
	{5,   114},	// A-Dimm
	{6,   114},
	{7,   114},
	{8,   114},
	{9,   114},
	{10,  114},
	{11,  114},
	{12,  114},
	{13,  114},
	{14,  114},
	{15,  114},
	{16,  114},
	{17,  114},
	{19,  114},
	{20,  114},
	{21,  114},
	{22,  114},
	{24,  114},
	{25,  114},
	{27,  114},
	{29,  114},
	{30,  114},
	{32,  114},
	{34,  114},
	{37,  114},
	{39,  114},
	{41,  114},
	{44,  114},
	{47,  114},
	{50,  114},
	{53,  114},
	{56,  114},
	{60,  114},
	{64,  114},
	{68,  121},	// S-Dimm
	{72,  127},
	{77,  135},
	{82,  144},
	{87,  151},
	{93,  159},
	{98,  169},
	{105, 179},
	{111, 189},
	{119, 201},
	{126, 212},
	{134, 224},
	{143, 238},
	{152, 251},
	{162, 264},	// A-Dimm
	{172, 264},
	{183, 264},
	{195, 264},
	{207, 264},
	{220, 264},
	{234, 264},
	{249, 264},	// S-Dimm
	{265, 278},
	{282, 296},
	{300, 310},
	{316, 325},
	{333, 342},
	{360, 360},
};

static int gradation_offset_revA[][9] = {
/*	V255 V203 V151 V87 V51 V35 V23 V11 V3 */
	{0,	3,	1,	1,	4,	6,	8,	10,	12}, // 5
	{0,	1,	-3,	-2,	2,	4,	6,	8,	10}, // 6
	{0,	2,	-1,	-1,	2,	3,	7,	7,	 8}, // 7
	{0,	5,	4,	3,	4,	5,	8,	7,	 8}, // 8
	{0,	1,	-4,	-3,	0,	1,	5,	8,	 8}, // 9
	{0,	2,	0,	-1,	1,	2,	5,	8,	 8}, // 10
	{0,	1,	-3,	-4,	-1,	0,	4,	7,	 8}, // 11
	{0,	2,	-1,	-3,	-1,	0,	3,	6,	 8}, // 12
	{0,	2,	-1,	-2,	0,	1,	4,	6,	 7}, // 13
	{0,	2,	-2,	-2,	-1,	0,	3,	5,	 7}, // 14
	{0,	2,	-1,	-2,	-1 ,	0,	3,	5,	 7}, // 15
	{0,	2,	-1,	-2,	0,	0,	3,	5,	 7}, // 16
	{0,	3,	0,	-1,	0,	0,	3,	5,	 0}, // 17
	{0,	2,	-1,	-3,	-1,	-1,	2,	4,	 6}, // 19
	{0,	3,	0,	-1,	0,	0,	2,	4,	 6}, // 20
	{0,	2,	-2,	-2,	-1,	-1,	2,	4,	 7}, // 21
	{0,	2,	-1,	-2,	-1,	-1,	2,	4,	 7}, // 22
	{0,	3,	2,	1,	2,	2,	4,	6,	 8}, // 24
	{0,	2,	-1,	-1,	0,	0,	3,	5,	 7}, // 25
	{0,	3,	2,	2,	2,	1,	4,	6,	 8}, // 27
	{0,	2,	0,	0,	1,	1,	4,	6,	 8}, // 29
	{0,	2,	1,	1,	1,	1,	4,	6,	 8}, // 30
	{0,	4,	3,	3,	2,	1,	4,	6,	 8}, // 32
	{0,	3,	2,	2,	2,	1,	4,	6,	 8}, // 34
	{0,	3,	2,	2,	2,	1,	3,	5,	 7}, // 37
	{0,	3,	2,	2,	2,	1,	3,	5,	 7}, // 39
	{0,	3,	2,	2,	2,	1,	3,	5,	 7}, // 41
	{0,	3,	2,	2,	2,	1,	3,	5,	 7}, // 44
	{0,	3,	2,	2,	2,	1,	3,	4,	 6}, // 47
	{0,	3,	2,	1,	1,	1,	3,	4,	 6}, // 50
	{0,	2,	1,	0,	0,	0,	2,	3,	 5}, // 53
	{0,	2,	1,	0,	0,	0,	2,	3,	 5}, // 56
	{0,	2,	1,	0,	0,	0,	2,	3,	 5}, // 60
	{0,	2,	1,	0,	0,	-1,	1,	2,	 4}, // 64
	{0,	3,	1,	1,	0,	0,	1,	3,	 5}, // 68
	{0,	4,	4,	3,	2,	2,	3,	4,	 6}, // 72
	{0,	2,	3,	3,	1,	1,	1,	2,	 5}, // 77
	{0,	3,	3,	2,	1,	1,	2,	3,	 5}, // 82
	{0,	4,	4,	3,	1,	1,	2,	3,	 5}, // 87
	{0,	2,	3,	3,	1,	0,	0,	2,	 4}, // 93
	{0,	3,	4,	3,	1,	1,	1,	3,	 5}, // 98
	{0,	3,	5,	3,	1,	0,	1,	2,	 5}, // 105
	{0,	3,	4,	3,	2,	1,	1,	2,	 5}, // 111
	{0,	4,	7,	5,	1,	1,	1,	3,	 5}, // 119
	{0,	3,	4,	3,	1,	0,	1,	2,	 3}, // 126
	{0,	4,	6,	4,	2,	0,	0,	1,	 3}, // 134
	{0,	3,	4,	2,	0,	-1,	-1,	0,	 2}, // 143
	{0,	2,	2,	0,	-2,	-3,	-2,	0,	 2}, // 152
	{0,	2,	4,	3,	1,	0,	0,	1,	 2}, // 162
	{0,	2,	4,	3,	1,	0,	0,	1,	 2}, // 172
	{0,	2,	3,	3,	1,	0,	0,	1,	 2}, // 183
	{0,	2,	3,	3,	1,	0,	0,	1,	 2}, // 195
	{0,	2,	2,	2,	0,	-1,	-1,	0,	 1}, // 207
	{0,	2,	2,	2,	0,	-1,	-1,	0,	 0}, // 220
	{0,	1,	2,	1,	-1,	-2,	-1,	0,	 0}, // 234
	{0,	1,	3,	3,	2,	1,	1,	2,	 3}, // 249
	{0,	2,	3,	2,	2,	1,	1,	2,	 2}, // 265
	{0,	0,	2,	1,	2,	2,	1,	1,	 2}, // 282
	{0,	-1,	1,	1,	1,	1,	0,	1,	 1}, // 300
	{0,	-1,	0,	0,	1,	0,	0,	1,	 1}, // 316
	{0,	-1,	0,	-1,	-1,	-1,	0,	0,	 1}, // 333
	{0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 360
};

static int rgb_offset_revA[][RGB_COMPENSATION] = {
/*	R255 G255 B255 R203 G203 B203 R151 G151 B151	R87 G87 B87 R51 G51 B51 R35 G35 B35 R23 G23 B23 R11 G11 B11*/
	{-1,	-2,	1,	-1,	-1,	-1,	1,	0,	1,	3,	1,	3,	3,	1,	3,	5,	2,	4,	10,	6,	6,	17,	11,	10}, // 5
	{1,	0,	3,	1,	1,	1,	2,	1,	2,	2,	1,	2,	3,	2,	3,	4,	1,	3,	14,	8,	7,	17,	11,	10}, // 6
	{0,	-1,	2,	0,	0,	0,	2,	1,	2,	2,	1,	2,	4,	1,	3,	5,	4,	4,	3,	-3,	0,	28,	22,	16}, // 7
	{-4,	-4,	-2,	-2,	-3,	-2,	-1,	-2,	0,	1,	-1,	1,	2,	1,	3,	4,	2,	3,	3,	-2,	1,	30,	26,	18}, // 8
	{0,	0,	2,	1,	1,	1,	4,	3,	3,	3,	1,	1,	3,	3,	4,	5,	5,	4,	3,	-2,	-1,	6,	0,	 2}, // 9
	{-1,	-1,	1,	0,	0,	0,	1,	0,	1,	3,	1,	2,	3,	3,	4,	4,	2,	2,	6,	3,	2,	6,	-2,	 2}, // 10
	{0,	0,	2,	1,	1,	1,	3,	2,	3,	6,	4,	4,	3,	3,	4,	4,	4,	2,	2,	-1,	-1,	4,	-2,	 2}, // 11
	{0,	0,	2,	0,	0,	0,	1,	1,	1,	6,	4,	5,	4,	4,	5,	4,	4,	2,	7,	5,	2,	5,	-4,	 1}, // 12
	{-1,	-1,	1,	1,	1,	1,	1,	0,	0,	3,	3,	3,	3,	3,	4,	1,	1,	1,	5,	2,	0,	3,	-4,	 0}, // 13
	{0,	0,	2,	1,	1,	1,	2,	1,	1,	2,	1,	1,	6,	6,	6,	3,	3,	2,	5,	2,	0,	10,	2,	 4}, // 14
	{0,	0,	2,	0,	0,	0,	2,	1,	1,	2,	2,	2,	7,	6,	7,	2,	2,	1,	5,	1,	0,	8,	2,	 3}, // 15
	{0,	0,	2,	0,	0,	0,	2,	1,	1,	2,	2,	2,	2,	2,	3,	6,	6,	3,	4,	1,	0,	7,	0,	 2}, // 16
	{-1,	-1,	1,	-1,	0,	-1,	3,	1,	1,	1,	1,	1,	5,	4,	5,	5,	5,	2,	3,	0,	-1,	7,	-1,	 2}, // 17
	{0,	0,	1,	0,	0,	0,	2,	1,	1,	4,	4,	5,	2,	3,	3,	7,	6,	3,	2,	0,	-2,	5,	-2,	 0}, // 19
	{-1,	-1,	0,	0,	0,	0,	1,	0,	-1,	2,	2,	3,	3,	3,	3,	5,	4,	2,	7,	6,	2,	5,	-3,	 0}, // 20
	{0,	0,	1,	1,	1,	1,	3,	2,	1,	2,	2,	2,	4,	4,	5,	6,	7,	2,	3,	1,	-2,	6,	0,	 0}, // 21
	{0,	0,	1,	1,	1,	1,	2,	1,	1,	3,	3,	3,	6,	6,	6,	6,	7,	2,	3,	2,	-2,	6,	3,	 0}, // 22
	{-1,	-1,	0,	0,	0,	0,	0,	0,	-1,	2,	1,	2,	1,	1,	1,	2,	3,	2,	5,	4,	0,	6,	2,	 0}, // 24
	{0,	0,	1,	1,	1,	1,	3,	3,	2,	2,	2,	2,	4,	5,	4,	5,	6,	1,	4,	2,	-2,	7,	4,	 0}, // 25
	{-1,	0,	0,	0,	0,	0,	1,	1,	0,	1,	1,	1,	3,	3,	3,	5,	7,	3,	3,	2,	-3,	5,	3,	-1}, // 27
	{0,	1,	1,	1,	1,	1,	2,	2,	1,	2,	2,	2,	3,	3,	3,	3,	4,	0,	2,	3,	-3,	5,	3,	-2}, // 29
	{0,	1,	1,	1,	1,	1,	1,	1,	0,	3,	3,	3,	4,	4,	4,	4,	5,	0,	2,	3,	-4,	6,	4,	-1}, // 30
	{-1,	0,	0,	0,	0,	0,	1,	0,	0,	2,	2,	2,	5,	5,	5,	6,	7,	3,	1,	2,	-5,	6,	5,	-1}, // 32
	{0,	1,	1,	0,	0,	0,	2,	2,	1,	2,	2,	2,	3,	4,	3,	6,	7,	3,	1,	2,	-5,	4,	3,	-2}, // 34
	{0,	1,	1,	0,	0,	0,	1,	1,	0,	3,	3,	3,	2,	3,	2,	6,	7,	3,	5,	7,	-1,	5,	4,	-2}, // 37
	{-1,	0,	0,	1,	1,	1,	1,	1,	0,	2,	2,	2,	3,	4,	3,	4,	6,	2,	6,	7,	-1,	3,	2,	-3}, // 39
	{-1,	0,	0,	1,	1,	1,	1,	1,	0,	2,	2,	2,	3,	4,	3,	4,	6,	2,	5,	6,	-1,	2,	1,	-4}, // 41
	{-1,	0,	0,	1,	1,	1,	1,	1,	0,	2,	2,	2,	2,	3,	2,	5,	6,	3,	4,	6,	-2,	1,	-1,	-4}, // 44
	{-1,	0,	0,	1,	1,	1,	1,	1,	0,	2,	2,	2,	2,	3,	2,	5,	6,	3,	3,	5,	-2,	7,	6,	-1}, // 47
	{-1,	0,	0,	0,	1,	0,	2,	1,	1,	4,	5,	4,	3,	3,	3,	1,	2,	-1,	4,	5,	-2,	5,	4,	-2}, // 50
	{0,	1,	1,	1,	1,	1,	1,	1,	0,	4,	5,	4,	6,	5,	6,	2,	4,	-1,	5,	5,	-2,	5,	6,	 1}, // 53
	{0,	1,	1,	1,	1,	1,	1,	1,	0,	4,	5,	4,	5,	5,	5,	2,	3,	-1,	4,	5,	-2,	5,	5,	 1}, // 56
	{0,	1,	1,	1,	1,	1,	1,	1,	0,	4,	5,	4,	5,	4,	5,	2,	4,	-1,	4,	4,	-2,	2,	4,	 0}, // 60
	{0,	1,	1,	1,	1,	1,	1,	1,	0,	4,	5,	4,	5,	5,	5,	8,	9,	4,	1,	4,	-4,	4,	5,	 2}, // 64
	{0,	1,	1,	0,	1,	1,	3,	2,	1,	2,	3,	2,	5,	5,	5,	5,	7,	2,	3,	3,	-3,	1,	1,	-1}, // 68
	{-1,	0,	0,	0,	0,	0,	1,	1,	1,	2,	1,	1,	1,	1,	2,	3,	3,	1,	2,	4,	-1,	4,	4,	-1}, // 72
	{0,	0,	1,	0,	1,	1,	1,	1,	0,	2,	2,	2,	3,	3,	3,	6,	6,	4,	4,	5,	-2,	4,	6,	 1}, // 77
	{-1,	0,	0,	0,	1,	1,	1,	2,	1,	3,	3,	3,	1,	1,	2,	5,	6,	3,	1,	2,	-2,	2,	3,	-2}, // 82
	{0,	0,	1,	0,	1,	1,	1,	1,	0,	2,	3,	2,	3,	3,	3,	4,	4,	2,	4,	6,	-1,	1,	1,	-3}, // 87
	{1,	1,	2,	1,	1,	1,	1,	2,	1,	2,	2,	2,	5,	4,	4,	7,	8,	5,	6,	8,	0,	1,	2,	-1}, // 93
	{-1,	0,	0,	0,	1,	1,	2,	3,	1,	2,	2,	2,	2,	3,	2,	5,	5,	3,	7,	9,	1,	-1,	-1,	-4}, // 98
	{0,	0,	0,	0,	1,	1,	1,	1,	1,	3,	2,	2,	3,	3,	3,	6,	7,	5,	1,	2,	-3,	3,	4,	-1}, // 105
	{0,	0,	1,	0,	1,	1,	1,	1,	0,	2,	1,	1,	4,	4,	4,	5,	6,	3,	4,	6,	0,	2,	3,	-1}, // 111
	{-1,	0,	0,	0,	0,	0,	0,	1,	0,	3,	2,	2,	6,	6,	6,	3,	4,	1,	2,	4,	-1,	0,	1,	-2}, // 119
	{0,	0,	1,	0,	1,	1,	2,	1,	1,	3,	2,	2,	3,	4,	3,	6,	7,	4,	2,	3,	-1,	6,	7,	 1}, // 126
	{0,	0,	1,	0,	2,	1,	0,	1,	0,	2,	2,	2,	3,	2,	3,	7,	7,	6,	6,	7,	2,	4,	6,	 0}, // 134
	{0,	0,	2,	1,	1,	0,	2,	2,	1,	3,	4,	3,	5,	5,	5,	9,	10,	6,	7,	9,	2,	6,	8,	 2}, // 143
	{1,	1,	2,	1,	1,	1,	2,	3,	1,	4,	4,	4,	7,	8,	6,	8,	9,	5,	4,	5,	0,	4,	7,	 1}, // 152
	{0,	0,	2,	1,	1,	1,	2,	2,	1,	2,	3,	2,	3,	4,	4,	3,	4,	2,	6,	8,	3,	7,	8,	 3}, // 162
	{0,	0,	1,	0,	1,	1,	1,	1,	1,	2,	3,	2,	3,	4,	3,	4,	5,	4,	6,	7,	2,	5,	6,	 2}, // 172
	{0,	0,	1,	0,	1,	1,	2,	1,	1,	2,	2,	2,	3,	3,	3,	3,	5,	2,	6,	7,	3,	4,	5,	 2}, // 183
	{0,	0,	1,	0,	1,	1,	1,	0,	0,	2,	2,	2,	4,	4,	4,	3,	4,	2,	6,	7,	3,	2,	3,	 0}, // 195
	{0,	0,	1,	0,	1,	1,	2,	1,	1,	2,	2,	2,	3,	3,	4,	5,	5,	3,	7,	9,	4,	4,	4,	 2}, // 207
	{0,	0,	1,	0,	1,	1,	2,	1,	1,	2,	2,	2,	3,	2,	3,	5,	6,	4,	6,	7,	3,	3,	4,	 2}, // 220
	{0,	0,	1,	1,	1,	1,	2,	2,	1,	2,	3,	2,	4,	4,	4,	6,	6,	4,	2,	3,	0,	2,	3,	 2}, // 234
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 249
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 265
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 282
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 300
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 316
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 333
	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	 0}, // 360
};

//=============================
//             HMT
//=============================
static int gradation_offset_reverse_hmt_single[][9] = {
/*	V255 V203 V151 V87 V51 V35 V23 V11 V7 */
	{0,	1,	2,	2,	4,	5,	7,	9,	11},	//10
	{0,	1,	2,	2,	3,	6,	7,	8,	13},	//11
	{0,	1,	2,	2,	3,	5,	7,	8,	10},	//12
	{0,	0,	2,	2,	4,	4,	7,	8,	11},	//13
	{0,	1,	3,	2,	4,	5,	6,	8,	14},	//14
	{0,	2,	3,	3,	3,	4,	6,	9,	1},	//15
	{0,	2,	2,	2,	4,	4,	7,	8,	2},	//16
	{0,	1,	3,	3,	4,	5,	7,	7,	0},	//17
	{0,	2,	3,	3,	4,	5,	6,	7,	5},	//19
	{0,	3,	3,	3,	3,	5,	6,	7,	13},	//20
	{0,	2,	3,	2,	4,	4,	6,	8,	9},	//21
	{0,	3,	2,	3,	3,	4,	5,	7,	8},	//22
	{0,	2,	2,	2,	4,	3,	6,	8,	8},	//23
	{0,	3,	3,	3,	4,	4,	6,	7,	0},	//25
	{0,	3,	3,	2,	4,	4,	6,	7,	9},	//27
	{0,	4,	4,	3,	3,	4,	6,	7,	9},	//29
	{0,	3,	3,	4,	3,	4,	5,	7,	9},	//31
	{0,	4,	5,	4,	3,	4,	6,	8,	9},	//33
	{0,	3,	4,	4,	4,	4,	6,	8,	8},	//35
	{0,	4,	5,	4,	4,	4,	5,	7,	10},	//37
	{0,	4,	6,	5,	4,	5,	6,	7,	10},	//39
	{0,	3,	5,	4,	3,	4,	5,	7,	8},	//41
	{0,	4,	6,	5,	4,	5,	5,	7,	10},	//44
	{0,	3,	6,	5,	4,	5,	6,	8,	10},	//47
	{0,	3,	6,	5,	3,	4,	5,	7,	9},	//50
	{0,	3,	7,	6,	4,	5,	5,	7,	10},	//53
	{0,	4,	7,	6,	5,	5,	5,	7,	10},	//56
	{0,	4,	6,	5,	5,	4,	5,	7,	9},	//60
	{0,	4,	6,	6,	4,	4,	5,	7,	9},	//64
	{0,	4,	7,	7,	5,	5,	5,	7,	9},	//68
	{0,	4,	6,	5,	4,	4,	5,	7,	9},	//72
	{0,	3,	6,	4,	3,	2,	3,	4,	6},	//77
	{0,	3,	6,	5,	3,	3,	4,	4,	7},	//82
	{0,	3,	7,	5,	4,	3,	3,	5,	5},	//87
	{0,	3,	6,	5,	3,	3,	3,	4,	6},	//93
	{0,	4,	7,	5,	3,	3,	3,	4,	5},	//99
	{0,	4,	6,	4,	3,	2,	3,	4,	5},	//105
};

static int rgb_offset_reverse_hmt_single[][RGB_COMPENSATION] = {
/*	R255 G255 B255 R203 G203 B203 R151 G151 B151	R87 G87 B87 R51 G51 B51 R35 G35 B35 R23 G23 B23 R11 G11 B11*/
	/* 10 */	{0,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	1,	-4,	-5,	2,	-6,	-8,	3,	-7,	-9,	3,	-7,	-18,	2,	-5},
	/* 11 */	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	-3,	-5,	2,	-6,	-6,	2,	-6,	-10,	3,	-8,	-21,	2,	-6},
	/* 12 */	{0,	0,	0,	0,	0,	-1,	-1,	0,	0,	0,	1,	-2,	-5,	2,	-6,	-7,	2,	-5,	-6,	2,	-6,	-19,	3,	-6},
	/* 13 */	{-1,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	1,	-2,	-4,	2,	-6,	-8,	2,	-6,	-6,	3,	-6,	-19,	3,	-6},
	/* 14 */	{0,	0,	0,	-1,	0,	-2,	0,	0,	0,	-1,	0,	-2,	-3,	2,	-5,	-7,	2,	-6,	-8,	4,	-8,	-18,	3,	-6},
	/* 15 */	{-1,	0,	0,	0,	0,	-1,	0,	0,	-1,	0,	1,	-2,	-3,	2,	-6,	-7,	2,	-5,	-9,	3,	-7,	-14,	2,	-5},
	/* 16 */	{-1,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	0,	-2,	-4,	2,	-6,	-7,	2,	-5,	-6,	2,	-5,	-25,	3,	-6},
	/* 17 */	{0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	-2,	-3,	2,	-5,	-7,	2,	-5,	-7,	2,	-6,	-26,	3,	-7},
	/* 19 */	{-1,	0,	0,	0,	0,	0,	0,	0,	0,	-1,	0,	-2,	-2,	2,	-5,	-5,	2,	-4,	-8,	3,	-7,	-24,	3,	-6},
	/* 20 */	{0,	0,	1,	0,	0,	-1,	-1,	0,	0,	0,	0,	-2,	-2,	2,	-5,	-6,	2,	-4,	-7,	3,	-7,	-25,	3,	-7},
	/* 21 */	{0,	0,	0,	-1,	0,	0,	-1,	0,	-1,	0,	0,	-1,	-2,	2,	-4,	-6,	2,	-5,	-6,	2,	-5,	-18,	4,	-8},
	/* 22 */	{0,	0,	1,	0,	0,	0,	0,	0,	0,	-2,	0,	-1,	-2,	2,	-5,	-4,	2,	-4,	-7,	3,	-7,	-24,	3,	-7},
	/* 23 */	{0,	0,	1,	0,	0,	-1,	0,	0,	0,	-1,	0,	-1,	-1,	2,	-4,	-5,	2,	-5,	-7,	2,	-6,	-19,	4,	-8},
	/* 25 */	{-1,	0,	0,	0,	0,	0,	1,	0,	0,	-1,	0,	-1,	-2,	2,	-4,	-4,	2,	-4,	-6,	3,	-6,	-18,	4,	-8},
	/* 27 */	{0,	0,	1,	0,	0,	0,	0,	0,	0,	-1,	0,	0,	-2,	2,	-5,	-4,	2,	-4,	-5,	2,	-5,	-20,	4,	-9},
	/* 29 */	{0,	0,	1,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	-2,	2,	-4,	-4,	2,	-4,	-5,	2,	-5,	-20,	4,	-9},
	/* 31 */	{0,	0,	2,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	2,	-4,	-4,	1,	-4,	-6,	3,	-6,	-19,	4,	-9},
	/* 33 */	{0,	0,	2,	0,	0,	-1,	0,	0,	-1,	0,	0,	0,	-2,	2,	-5,	-5,	1,	-4,	-5,	2,	-5,	-17,	4,	-10},
	/* 35 */	{0,	0,	2,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	-2,	2,	-4,	-3,	2,	-4,	-4,	2,	-5,	-16,	4,	-9},
	/* 37 */	{0,	0,	1,	0,	0,	-1,	0,	0,	-1,	0,	0,	-1,	-1,	1,	-3,	-3,	2,	-4,	-5,	2,	-6,	-16,	4,	-9},
	/* 39 */	{0,	0,	2,	0,	0,	-1,	0,	0,	-1,	0,	0,	-1,	-2,	1,	-3,	-3,	2,	-4,	-4,	2,	-5,	-18,	4,	-10},
	/* 41 */	{0,	0,	3,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	0,	1,	-3,	-3,	2,	-4,	-5,	2,	-5,	-14,	4,	-8},
	/* 44 */	{0,	0,	3,	0,	0,	0,	0,	0,	0,	-1,	0,	-2,	-1,	1,	-3,	-4,	1,	-4,	-4,	2,	-5,	-14,	4,	-8},
	/* 47 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	-1,	-1,	1,	-3,	-3,	1,	-4,	-4,	2,	-5,	-14,	4,	-8},
	/* 50 */	{0,	0,	3,	1,	0,	0,	0,	0,	0,	0,	0,	-1,	-1,	1,	-3,	-3,	1,	-4,	-4,	2,	-5,	-13,	3,	-8},
	/* 53 */	{0,	0,	3,	0,	0,	0,	0,	0,	-2,	0,	0,	0,	0,	1,	-2,	-3,	1,	-4,	-5,	2,	-6,	-14,	3,	-8},
	/* 56 */	{0,	0,	3,	0,	0,	-1,	0,	0,	0,	-1,	0,	-1,	-1,	1,	-2,	-3,	1,	-4,	-4,	2,	-5,	-13,	4,	-9},
	/* 60 */	{0,	0,	4,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	0,	-2,	-3,	1,	-4,	-4,	2,	-5,	-12,	3,	-8},
	/* 64 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	-1,	-2,	0,	-2,	-3,	1,	-4,	-3,	2,	-4,	-11,	3,	-8},
	/* 68 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	-1,	-1,	0,	-2,	-2,	1,	-4,	-5,	2,	-6,	-11,	3,	-8},
	/* 72 */	{1,	0,	4,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	-1,	1,	-2,	-1,	1,	-3,	-3,	2,	-4,	-10,	3,	-8},
	/* 77 */	{0,	0,	4,	0,	0,	-1,	0,	0,	0,	0,	0,	0,	0,	1,	-2,	-1,	1,	-3,	-2,	1,	-3,	-9,	3,	-8},
	/* 82 */	{1,	0,	4,	0,	0,	-1,	0,	0,	-1,	0,	0,	0,	-1,	0,	-2,	-1,	1,	-2,	-4,	1,	-3,	-10,	4,	-9},
	/* 87 */	{0,	0,	4,	0,	0,	-1,	0,	0,	-2,	0,	0,	0,	0,	0,	-2,	-1,	1,	-2,	-3,	1,	-3,	-9,	3,	-8},
	/* 93 */	{1,	0,	4,	0,	0,	-1,	0,	0,	-1,	-1,	0,	0,	0,	0,	0,	0,	1,	-2,	-4,	1,	-3,	-10,	4,	-9},
	/* 99 */	{0,	0,	3,	0,	0,	0,	0,	0,	-1,	0,	0,	0,	-1,	0,	-1,	-1,	1,	-3,	-2,	1,	-2,	-9,	3,	-8},
	/* 105 */	{0,	0,	4,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	-2,	-1,	1,	-2,	-2,	1,	-2,	-8,	3,	-8},
};

static int base_luminance_reverse_hmt_single[][2] = {
	{10,	49},
	{11,	53},
	{12,	60},
	{13,	64},
	{14,	67},
	{15,	73},
	{16,	77},
	{17,	81},
	{19,	91},
	{20,	93},
	{21,	99},
	{22,	100},
	{23,	106},
	{25,	114},
	{27,	121},
	{29,	129},
	{31,	136},
	{33,	144},
	{35,	152},
	{37,	161},
	{39,	169},
	{41,	177},
	{44,	187},
	{47,	200},
	{50,	209},
	{53,	222},
	{56,	233},
	{60,	245},
	{64,	264},
	{68,	273},
	{72,	292},
	{77,	217},
	{82,	230},
	{87,	244},
	{93,	255},
	{99,	271},
	{105,	286},
};

static int ccg6_candela_table_reverse_hmt[][2] = {
	{10,	 0},
	{11,	 1},
	{12,	 2},
	{13,	 3},
	{14,	 4},
	{15,	 5},
	{16,	 6},
	{17,	 7},
	{19,	 8},
	{20,	 9},
	{21,	 10},
	{22,	 11},
	{23,	 12},
	{25,	 13},
	{27,	 14},
	{29,	 15},
	{31,	 16},
	{33,	 17},
	{35,	 18},
	{37,	 19},
	{39,	 20},
	{41,	 21},
	{44,	 22},
	{47,	 23},
	{50,	 24},
	{53,	 25},
	{56,	 26},
	{60,	 27},
	{64,	 28},
	{68,	 29},
	{72,	 30},
	{77,	 31},
	{82,	 32},
	{87,	 33},
	{93,	 34},
	{99,	 35},
	{105,	 36},
};
#endif
